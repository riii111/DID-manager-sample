## ------------------------------
## ベースイメージ
FROM rust:1.83.0-slim-bookworm AS base
ARG CARGO_CHEF_VERSION=0.1.68
ARG MOLD_VERSION=2.35.1

# 必要なツールのインストール
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libssl-dev \
    pkg-config \
    curl && \
    rm -rf /var/lib/apt/lists/* && \
    cargo install --locked cargo-chef --version ${CARGO_CHEF_VERSION} && \
    # moldのインストール
    ARCH=$(uname -m) && \
    curl -L https://github.com/rui314/mold/releases/download/v${MOLD_VERSION}/mold-${MOLD_VERSION}-${ARCH}-linux.tar.gz | \
    tar xz -C /usr/local --strip-components=1 && \
    apt-get purge -y curl && \
    apt-get autoremove -y

ENV CARGO_BUILD_JOBS="8"

## ------------------------------
## プランニングステージ
## プロジェクトの依存関係を分析し、ビルド時に必要な情報をレシピに保存
## 依存関係が変更されていない場合のキャッシュを効率的に利用
FROM base AS planner
WORKDIR /app
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

## ------------------------------
## ビルドステージ
FROM base AS builder
WORKDIR /app
COPY --from=planner /app/recipe.json recipe.json
RUN --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=cache,target=/usr/local/cargo/git \
    mold -run cargo chef cook --recipe-path recipe.json

# ソースコードのコピーとビルド
COPY . .
RUN --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=cache,target=/usr/local/cargo/git \
    mold -run cargo build --all-features

## ------------------------------
## 開発環境
FROM rust:1.83.0-slim-bookworm AS development
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    postgresql-client \
    libssl-dev \
    pkg-config && \
    rm -rf /var/lib/apt/lists/* && \
    cargo install cargo-watch

WORKDIR /app
COPY --from=builder /app/target /app/target
COPY --from=builder /usr/local/cargo/registry /usr/local/cargo/registry

# 必要なファイルのみをコピー
COPY Cargo.toml Cargo.lock ./
COPY agent ./agent
COPY protocol ./protocol
COPY controller ./controller
COPY bin ./bin
